{"version":3,"sources":["components/Nav.js","components/Home.js","components/About.js","components/Contact.js","components/Shop/Shoplist.js","components/Shop/Item.js","components/Shop/Shop.js","App.js","serviceWorker.js","index.js"],"names":["Nav","path","to","Home","About","Contact","Placeholder","style","height","display","justifyContent","color","padding","fontFamily","textAlign","lineHeight","Shoplist","props","useState","className","match","activeClassName","exact","component","Item","itemDetail","recipe","label","src","image","alt","Shop","items","setItems","useEffect","fetchItems","params","a","fetch","id","data","json","item","hits","console","log","map","key","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a61e4f65.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../Shop.css';\r\n\r\nconst Nav = ()=> {\r\n    const path = '/react-router';\r\n    return (\r\n        <nav>\r\n        <ul>\r\n            <Link to={`${path}/`}><li>Home</li></Link>\r\n            <Link to={`${path}/about`}><li>About</li></Link>\r\n            <Link to={`${path}/contact`}><li>Contact</li></Link>\r\n            <Link to={`${path}/shop`}><li>Shopping</li></Link>\r\n        </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Home = ()=> {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Home</h3>\r\n            <article>This is a test page.</article>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = ()=> {\r\n\r\n    return (\r\n        <div>\r\n            <h3>About</h3>\r\n            <article>This is a test about page.</article>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Contact = ()=> {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Contact</h3>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Contact;","import React, {useState } from 'react';\r\nimport {NavLink, Route} from 'react-router-dom';\r\n\r\nconst Shoplist = (props)=> {\r\n\r\n    useState( ()=> {\r\n    //    console.log(props);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"shoplist\">\r\n            <nav className=\"navbar\">\r\n            <ul className=\"nav\">\r\n                <li><NavLink to={`${props.match.path}/maze`} activeClassName='active'>Maze</NavLink></li>\r\n                <li><NavLink to={`${props.match.path}/banana`} activeClassName='active'>Banana</NavLink></li>\r\n                <li><NavLink to={`${props.match.path}/potato`} activeClassName='active'>Potato</NavLink></li>\r\n                <li><NavLink to={`${props.match.path}/mango`} activeClassName='active'>Mango</NavLink></li>\r\n                <li><NavLink to={`${props.match.path}/apple`} activeClassName='active'>Apple</NavLink></li>\r\n                <li><NavLink to={`${props.match.path}/cabbage`} activeClassName='active'>Cabbage</NavLink></li>\r\n                <li><NavLink to={`${props.match.path}/pear`} activeClassName='active'>Orange</NavLink></li>\r\n            </ul>\r\n            </nav>\r\n\r\n            <Route exact path={`${props.match.path}`} component={Placeholder} />\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Placeholder = ()=>{\r\n\r\n    const mystyle = {\r\n        height: \"80vh\",\r\n        display: \"flex\",\r\n        justifyContent:\"center\",\r\n        color: \"blueviolet\",\r\n        padding: \"10px\",\r\n        fontFamily: \"Arial\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"30px\"\r\n    };\r\n\r\n    return (\r\n        <article style={mystyle}>Recipes will be loaded here... <br/>This component will be removed on route change.</article>\r\n    )\r\n};\r\n\r\nexport default Shoplist;\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Item = ({itemDetail})=>{\r\n\r\n        return (\r\n            <li>\r\n                <h3>{itemDetail.recipe.label}</h3>\r\n                <img src={itemDetail.recipe.image} alt=''/>\r\n            </li>\r\n        )\r\n\r\n};\r\n\r\nexport default Item;","import React, {useEffect, useState } from 'react';\r\nimport Item from './Item';\r\n\r\nconst Shop = ({match})=> {\r\n\r\n    const shopURL = 'https://api.edamam.com/search';\r\n    const key = '87ea9972';\r\n    const applicationKey = 'b5185cdc79af3b0e68168a01d77023ad';\r\n\r\n    const [items, setItems] = useState([{\r\n        recipe : {}\r\n    }]);\r\n\r\n    useEffect( ()=> {\r\n        fetchItems();\r\n    }, [match.params]);\r\n\r\n    const fetchItems = async()=> {\r\n        try {\r\n            const data = await fetch(`${shopURL}?q=${match.params.id}&app_id=${key}&app_key=${applicationKey}`);\r\n            const item = await data.json();\r\n            setItems(item.hits);\r\n        }\r\n        catch(error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"items\">\r\n\r\n            {items.map( (item, id) =>(\r\n                <Item key={id} itemDetail={item} />\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Shop;\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Contact from './components/Contact'\nimport Shoplist from './components/Shop/Shoplist';\nimport Shop from './components/Shop/Shop';\n\nfunction App() {\n\n    const path = '/react-router';\n  return (\n      <div className=\"app\">\n\n        <Router>\n            <Nav />\n\n                <Route exact path={`${path}/`} component={Home} />\n                <Route path={`${path}/about`} component={About} />\n                <Route path={`${path}/contact`} component={Contact} />\n                <Route path={`${path}/shop`} component={Shoplist}>\n                </Route>\n                <Route path={`${path}/shop/:id`} component={Shop}></Route>\n\n        </Router>\n      </div>\n  );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}